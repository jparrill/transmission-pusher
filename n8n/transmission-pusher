#!/usr/bin/env python3
"""
Transmission CLI wrapper script
Loads .env file and calls the standalone transmission script
"""

import os
import sys
from pathlib import Path

# Get the directory where this script is located
script_dir = Path(__file__).parent.absolute()

# Load .env file from the repository root
# The repository is in /Users/jparrill/Projects/transmission-pusher/
repo_path = Path("/Users/jparrill/Projects/transmission-pusher")
env_file = repo_path / ".env"
if env_file.exists():
    with open(env_file, "r") as f:
        for line in f:
            line = line.strip()
            if line and not line.startswith("#") and "=" in line:
                key, value = line.split("=", 1)
                os.environ[key] = value

# Import and run the standalone script
sys.path.insert(0, str(script_dir))

# Execute the standalone script directly instead of importing
# The standalone script is in the n8n directory of the repository
standalone_script = script_dir / "transmission_standalone.py"
if not standalone_script.exists():
    # If not found in the same directory, look in the n8n directory of the repository
    # The repository is in /Users/jparrill/Projects/transmission-pusher/
    repo_path = Path("/Users/jparrill/Projects/transmission-pusher")
    standalone_script = repo_path / "n8n" / "transmission_standalone.py"

if standalone_script.exists():
    # Read and execute the standalone script
    with open(standalone_script, "r") as f:
        code = compile(f.read(), str(standalone_script), "exec")
    exec(code)
else:
    print("‚ùå Error: transmission_standalone.py not found")
    print(f"   Looked in: {script_dir}")
    print(f"   And in: {repo_path / 'n8n'}")
    sys.exit(1)
